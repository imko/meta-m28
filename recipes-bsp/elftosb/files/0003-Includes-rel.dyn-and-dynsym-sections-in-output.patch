From 3f413822daebcd9e9d86bfe5378d099b9359b562 Mon Sep 17 00:00:00 2001
From: Markus Hubig <mhubig@imko.de>
Date: Tue, 14 May 2013 11:26:55 +0200
Subject: [PATCH 3/4] Includes rel.dyn and dynsym sections in output.
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Patched elftosb to include rel.dyn and dynsym sections in the output and to
exclude NOBITS sections to prevent the .bss section from overwriting the
overlayed .rel.dyn section

Signed-off-by: Lothar Wa√ümann <LW@KARO-electronics.de
---
 common/ELFSourceFile.cpp | 25 ++++++++++++++++++-------
 1 file changed, 18 insertions(+), 7 deletions(-)

diff --git a/common/ELFSourceFile.cpp b/common/ELFSourceFile.cpp
index 68f99ff..962256a 100644
--- a/common/ELFSourceFile.cpp
+++ b/common/ELFSourceFile.cpp
@@ -210,8 +210,14 @@ DataSource * ELFSourceFile::createDataSource(StringMatcher & matcher)
 		std::string name = m_file->getSectionNameAtIndex(header.sh_name);
 		
 		// Ignore most section types
-		if (!(header.sh_type == SHT_PROGBITS || header.sh_type == SHT_NOBITS))
-		{
+		switch (header.sh_type) {
+		case SHT_PROGBITS:
+		case SHT_NOBITS:
+		case SHT_REL:
+		case SHT_DYNSYM:
+			break;
+
+		default:
 			continue;
 		}
 
@@ -425,11 +431,14 @@ void ELFSourceFile::ELFDataSource::addSection(unsigned sectionIndex)
 	
 	// create the right segment subclass based on the section type
 	DataSource::Segment * segment = NULL;
-	if (section.sh_type == SHT_PROGBITS)
-	{
+	switch (section.sh_type) {
+	case SHT_PROGBITS:
+	case SHT_REL:
+	case SHT_DYNSYM:
 		segment = new ProgBitsSegment(*this, m_elf, sectionIndex);
-	}
-	else if (section.sh_type == SHT_NOBITS)
+		break;
+
+	case SHT_NOBITS:
 	{
 		// Always add NOBITS sections by default.
 		bool addNobits = true;
@@ -438,6 +447,7 @@ void ELFSourceFile::ELFDataSource::addSection(unsigned sectionIndex)
 		// If set to ignore, treat like a normal ELF file and always add. If set to
 		// ROM, then only clear if the section is listed in .secinfo. Otherwise if set
 		// to C startup, then let the C startup do all clearing.
+		addNobits = false;
 		if (m_elf->ELFVariant() == eGHSVariant)
 		{
 			GHSSecInfo secinfo(m_elf);
@@ -469,7 +479,8 @@ void ELFSourceFile::ELFDataSource::addSection(unsigned sectionIndex)
 			Log::log(Logger::DEBUG2, "..section %s is not filled\n", name.c_str());
 		}
 	}
-	
+	break;
+	}
 	// add segment if one was created
 	if (segment)
 	{
-- 
1.8.1.2

